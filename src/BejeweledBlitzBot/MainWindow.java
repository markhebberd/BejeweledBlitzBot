/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package BejeweledBlitzBot;

import java.util.List;
import javax.swing.SwingWorker;

/**
 *
 * @author Mark Hebberd
 */
public class MainWindow extends javax.swing.JFrame {

    ArrayWork arrayWork = new ArrayWork();
    private long runTime = 10000;
    BaseNotFoundFrame bnff = new BaseNotFoundFrame();

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        runButton = new javax.swing.JButton();
        runTimeSelectionLabel = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        authorContact = new javax.swing.JLabel();
        runTimeComboBox = new javax.swing.JComboBox();
        row0 = new javax.swing.JPanel();
        canvas1 = new java.awt.Canvas();
        canvas2 = new java.awt.Canvas();
        canvas3 = new java.awt.Canvas();
        canvas4 = new java.awt.Canvas();
        canvas5 = new java.awt.Canvas();
        canvas6 = new java.awt.Canvas();
        canvas7 = new java.awt.Canvas();
        canvas8 = new java.awt.Canvas();
        row1 = new javax.swing.JPanel();
        canvas9 = new java.awt.Canvas();
        canvas10 = new java.awt.Canvas();
        canvas11 = new java.awt.Canvas();
        canvas12 = new java.awt.Canvas();
        canvas13 = new java.awt.Canvas();
        canvas14 = new java.awt.Canvas();
        canvas15 = new java.awt.Canvas();
        canvas16 = new java.awt.Canvas();
        row2 = new javax.swing.JPanel();
        canvas17 = new java.awt.Canvas();
        canvas18 = new java.awt.Canvas();
        canvas19 = new java.awt.Canvas();
        canvas20 = new java.awt.Canvas();
        canvas21 = new java.awt.Canvas();
        canvas22 = new java.awt.Canvas();
        canvas23 = new java.awt.Canvas();
        canvas24 = new java.awt.Canvas();
        row3 = new javax.swing.JPanel();
        canvas25 = new java.awt.Canvas();
        canvas26 = new java.awt.Canvas();
        canvas27 = new java.awt.Canvas();
        canvas28 = new java.awt.Canvas();
        canvas29 = new java.awt.Canvas();
        canvas30 = new java.awt.Canvas();
        canvas31 = new java.awt.Canvas();
        canvas32 = new java.awt.Canvas();
        row4 = new javax.swing.JPanel();
        canvas33 = new java.awt.Canvas();
        canvas34 = new java.awt.Canvas();
        canvas35 = new java.awt.Canvas();
        canvas36 = new java.awt.Canvas();
        canvas37 = new java.awt.Canvas();
        canvas38 = new java.awt.Canvas();
        canvas39 = new java.awt.Canvas();
        canvas40 = new java.awt.Canvas();
        row5 = new javax.swing.JPanel();
        canvas41 = new java.awt.Canvas();
        canvas42 = new java.awt.Canvas();
        canvas43 = new java.awt.Canvas();
        canvas44 = new java.awt.Canvas();
        canvas45 = new java.awt.Canvas();
        canvas46 = new java.awt.Canvas();
        canvas47 = new java.awt.Canvas();
        canvas48 = new java.awt.Canvas();
        row6 = new javax.swing.JPanel();
        canvas49 = new java.awt.Canvas();
        canvas50 = new java.awt.Canvas();
        canvas51 = new java.awt.Canvas();
        canvas52 = new java.awt.Canvas();
        canvas53 = new java.awt.Canvas();
        canvas54 = new java.awt.Canvas();
        canvas55 = new java.awt.Canvas();
        canvas56 = new java.awt.Canvas();
        row7 = new javax.swing.JPanel();
        canvas57 = new java.awt.Canvas();
        canvas58 = new java.awt.Canvas();
        canvas59 = new java.awt.Canvas();
        canvas60 = new java.awt.Canvas();
        canvas61 = new java.awt.Canvas();
        canvas62 = new java.awt.Canvas();
        canvas63 = new java.awt.Canvas();
        canvas64 = new java.awt.Canvas();
        exitButton = new javax.swing.JButton();
        jSeparatorUpper = new javax.swing.JSeparator();
        jSeparatorLower = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Bejeweled Bot");
        setAlwaysOnTop(true);
        setName("mainWindowFrame"); // NOI18N
        setResizable(false);

        runButton.setText("Run Bejeweled Bot");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        runTimeSelectionLabel.setText("Run time");

        title.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        title.setText("BejeweledBot .1");

        authorContact.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        authorContact.setText("MarkHebberd@gmail.com");

        runTimeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10 seconds", "50 seconds", "60 seconds", "80 seconds" }));
        runTimeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runTimeComboBoxActionPerformed(evt);
            }
        });

        row0.setRequestFocusEnabled(false);
        row0.setVerifyInputWhenFocusTarget(false);
        row0.setLayout(new java.awt.GridLayout(1, 8, 5, 0));

        canvas1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                canvas1PropertyChange(evt);
            }
        });
        row0.add(canvas1);
        row0.add(canvas2);
        row0.add(canvas3);
        row0.add(canvas4);
        row0.add(canvas5);
        row0.add(canvas6);
        row0.add(canvas7);
        row0.add(canvas8);

        row1.setRequestFocusEnabled(false);
        row1.setVerifyInputWhenFocusTarget(false);
        row1.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row1.add(canvas9);
        row1.add(canvas10);
        row1.add(canvas11);
        row1.add(canvas12);
        row1.add(canvas13);
        row1.add(canvas14);
        row1.add(canvas15);
        row1.add(canvas16);

        row2.setRequestFocusEnabled(false);
        row2.setVerifyInputWhenFocusTarget(false);
        row2.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row2.add(canvas17);
        row2.add(canvas18);
        row2.add(canvas19);
        row2.add(canvas20);
        row2.add(canvas21);
        row2.add(canvas22);
        row2.add(canvas23);
        row2.add(canvas24);

        row3.setRequestFocusEnabled(false);
        row3.setVerifyInputWhenFocusTarget(false);
        row3.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row3.add(canvas25);
        row3.add(canvas26);
        row3.add(canvas27);
        row3.add(canvas28);
        row3.add(canvas29);
        row3.add(canvas30);
        row3.add(canvas31);
        row3.add(canvas32);

        row4.setRequestFocusEnabled(false);
        row4.setVerifyInputWhenFocusTarget(false);
        row4.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row4.add(canvas33);
        row4.add(canvas34);
        row4.add(canvas35);
        row4.add(canvas36);
        row4.add(canvas37);
        row4.add(canvas38);
        row4.add(canvas39);
        row4.add(canvas40);

        row5.setRequestFocusEnabled(false);
        row5.setVerifyInputWhenFocusTarget(false);
        row5.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row5.add(canvas41);
        row5.add(canvas42);
        row5.add(canvas43);
        row5.add(canvas44);
        row5.add(canvas45);
        row5.add(canvas46);
        row5.add(canvas47);
        row5.add(canvas48);

        row6.setRequestFocusEnabled(false);
        row6.setVerifyInputWhenFocusTarget(false);
        row6.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row6.add(canvas49);
        row6.add(canvas50);
        row6.add(canvas51);
        row6.add(canvas52);
        row6.add(canvas53);
        row6.add(canvas54);
        row6.add(canvas55);
        row6.add(canvas56);

        row7.setRequestFocusEnabled(false);
        row7.setVerifyInputWhenFocusTarget(false);
        row7.setLayout(new java.awt.GridLayout(1, 8, 5, 0));
        row7.add(canvas57);
        row7.add(canvas58);
        row7.add(canvas59);
        row7.add(canvas60);
        row7.add(canvas61);
        row7.add(canvas62);
        row7.add(canvas63);
        row7.add(canvas64);

        exitButton.setText("Exit");
        exitButton.setToolTipText("");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparatorUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(row0, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row3, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row4, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row5, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(row7, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSeparatorLower, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(runButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(authorContact))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(runTimeSelectionLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(runTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(title)
                    .addComponent(authorContact))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparatorUpper, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row0, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(row7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparatorLower, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(runTimeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runTimeSelectionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(runButton))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void start() {

        SwingWorker<Void, Jewel[][]> worker;
        worker = new SwingWorker<Void, Jewel[][]>() {
            @Override
            //runs intensive screen/array checking 
            protected Void doInBackground() throws Exception {

                int baseLocation[] = arrayWork.findBase();
                if (baseLocation[0] != 0 && baseLocation[1] != 0) {
                    arrayWork.clickPlayNowButton();
                    long startTime = System.currentTimeMillis();
                    while (startTime + runTime > System.currentTimeMillis()) {
                        Jewel matrixOfJewels[][] = arrayWork.buildArray();
                        publish(matrixOfJewels);
                        int[] toMove = arrayWork.findMove(matrixOfJewels);
                        if (toMove[0] + toMove[1] + toMove[2] + toMove[3] != 0) {
                            arrayWork.mouseclick(toMove);
                        }
                    }
                } else {
                    bnff.setVisible(true);
                }
                return null;
            }
// updating the GUI on Execue Thread

            @Override
            protected void process(List<Jewel[][]> listOfMatrixOfJewels) {
                Jewel[][] matrix = listOfMatrixOfJewels.get(listOfMatrixOfJewels.size() - 1);
                canvas1.setBackground(matrix[0][0].getJewelColour());
                canvas2.setBackground(matrix[0][1].getJewelColour());
                canvas3.setBackground(matrix[0][2].getJewelColour());
                canvas4.setBackground(matrix[0][3].getJewelColour());
                canvas5.setBackground(matrix[0][4].getJewelColour());
                canvas6.setBackground(matrix[0][5].getJewelColour());
                canvas7.setBackground(matrix[0][6].getJewelColour());
                canvas8.setBackground(matrix[0][7].getJewelColour());
                canvas9.setBackground(matrix[1][0].getJewelColour());
                canvas10.setBackground(matrix[1][1].getJewelColour());
                canvas11.setBackground(matrix[1][2].getJewelColour());
                canvas12.setBackground(matrix[1][3].getJewelColour());
                canvas13.setBackground(matrix[1][4].getJewelColour());
                canvas14.setBackground(matrix[1][5].getJewelColour());
                canvas15.setBackground(matrix[1][6].getJewelColour());
                canvas16.setBackground(matrix[1][7].getJewelColour());
                canvas17.setBackground(matrix[2][0].getJewelColour());
                canvas18.setBackground(matrix[2][1].getJewelColour());
                canvas19.setBackground(matrix[2][2].getJewelColour());
                canvas20.setBackground(matrix[2][3].getJewelColour());
                canvas21.setBackground(matrix[2][4].getJewelColour());
                canvas22.setBackground(matrix[2][5].getJewelColour());
                canvas23.setBackground(matrix[2][6].getJewelColour());
                canvas24.setBackground(matrix[2][7].getJewelColour());
                canvas25.setBackground(matrix[3][0].getJewelColour());
                canvas26.setBackground(matrix[3][1].getJewelColour());
                canvas27.setBackground(matrix[3][2].getJewelColour());
                canvas28.setBackground(matrix[3][3].getJewelColour());
                canvas29.setBackground(matrix[3][4].getJewelColour());
                canvas30.setBackground(matrix[3][5].getJewelColour());
                canvas31.setBackground(matrix[3][6].getJewelColour());
                canvas32.setBackground(matrix[3][7].getJewelColour());
                canvas33.setBackground(matrix[4][0].getJewelColour());
                canvas34.setBackground(matrix[4][1].getJewelColour());
                canvas35.setBackground(matrix[4][2].getJewelColour());
                canvas36.setBackground(matrix[4][3].getJewelColour());
                canvas37.setBackground(matrix[4][4].getJewelColour());
                canvas38.setBackground(matrix[4][5].getJewelColour());
                canvas39.setBackground(matrix[4][6].getJewelColour());
                canvas40.setBackground(matrix[4][7].getJewelColour());
                canvas41.setBackground(matrix[5][0].getJewelColour());
                canvas42.setBackground(matrix[5][1].getJewelColour());
                canvas43.setBackground(matrix[5][2].getJewelColour());
                canvas44.setBackground(matrix[5][3].getJewelColour());
                canvas45.setBackground(matrix[5][4].getJewelColour());
                canvas46.setBackground(matrix[5][5].getJewelColour());
                canvas47.setBackground(matrix[5][6].getJewelColour());
                canvas48.setBackground(matrix[5][7].getJewelColour());
                canvas49.setBackground(matrix[6][0].getJewelColour());
                canvas50.setBackground(matrix[6][1].getJewelColour());
                canvas51.setBackground(matrix[6][2].getJewelColour());
                canvas52.setBackground(matrix[6][3].getJewelColour());
                canvas53.setBackground(matrix[6][4].getJewelColour());
                canvas54.setBackground(matrix[6][5].getJewelColour());
                canvas55.setBackground(matrix[6][6].getJewelColour());
                canvas56.setBackground(matrix[6][7].getJewelColour());
                canvas57.setBackground(matrix[7][0].getJewelColour());
                canvas58.setBackground(matrix[7][1].getJewelColour());
                canvas59.setBackground(matrix[7][2].getJewelColour());
                canvas60.setBackground(matrix[7][3].getJewelColour());
                canvas61.setBackground(matrix[7][4].getJewelColour());
                canvas62.setBackground(matrix[7][5].getJewelColour());
                canvas63.setBackground(matrix[7][6].getJewelColour());
                canvas64.setBackground(matrix[7][7].getJewelColour());
            }
        };
        worker.execute();
    }

    private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed
        start();
    }//GEN-LAST:event_runButtonActionPerformed
    private void runTimeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runTimeComboBoxActionPerformed
        int index = runTimeComboBox.getSelectedIndex();
//        this.runTime = (long) runTimeComboBox.getItemAt(runTimeComboBox.getSelectedIndex());
        switch (index) {
            case 0:
                this.runTime = 10000;
                break;
            case 1:
                this.runTime = 50000;
                break;
            case 2:
                this.runTime = 60000;
                break;
            case 3:
                this.runTime = 80000;
                break;
        }
    }//GEN-LAST:event_runTimeComboBoxActionPerformed

    private void canvas1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_canvas1PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_canvas1PropertyChange

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        System.exit(1);    }//GEN-LAST:event_exitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
















                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and textDisplayJewel the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new MainWindow().setVisible(true);
            }
        });


    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel authorContact;
    private java.awt.Canvas canvas1;
    private java.awt.Canvas canvas10;
    private java.awt.Canvas canvas11;
    private java.awt.Canvas canvas12;
    private java.awt.Canvas canvas13;
    private java.awt.Canvas canvas14;
    private java.awt.Canvas canvas15;
    private java.awt.Canvas canvas16;
    private java.awt.Canvas canvas17;
    private java.awt.Canvas canvas18;
    private java.awt.Canvas canvas19;
    private java.awt.Canvas canvas2;
    private java.awt.Canvas canvas20;
    private java.awt.Canvas canvas21;
    private java.awt.Canvas canvas22;
    private java.awt.Canvas canvas23;
    private java.awt.Canvas canvas24;
    private java.awt.Canvas canvas25;
    private java.awt.Canvas canvas26;
    private java.awt.Canvas canvas27;
    private java.awt.Canvas canvas28;
    private java.awt.Canvas canvas29;
    private java.awt.Canvas canvas3;
    private java.awt.Canvas canvas30;
    private java.awt.Canvas canvas31;
    private java.awt.Canvas canvas32;
    private java.awt.Canvas canvas33;
    private java.awt.Canvas canvas34;
    private java.awt.Canvas canvas35;
    private java.awt.Canvas canvas36;
    private java.awt.Canvas canvas37;
    private java.awt.Canvas canvas38;
    private java.awt.Canvas canvas39;
    private java.awt.Canvas canvas4;
    private java.awt.Canvas canvas40;
    private java.awt.Canvas canvas41;
    private java.awt.Canvas canvas42;
    private java.awt.Canvas canvas43;
    private java.awt.Canvas canvas44;
    private java.awt.Canvas canvas45;
    private java.awt.Canvas canvas46;
    private java.awt.Canvas canvas47;
    private java.awt.Canvas canvas48;
    private java.awt.Canvas canvas49;
    private java.awt.Canvas canvas5;
    private java.awt.Canvas canvas50;
    private java.awt.Canvas canvas51;
    private java.awt.Canvas canvas52;
    private java.awt.Canvas canvas53;
    private java.awt.Canvas canvas54;
    private java.awt.Canvas canvas55;
    private java.awt.Canvas canvas56;
    private java.awt.Canvas canvas57;
    private java.awt.Canvas canvas58;
    private java.awt.Canvas canvas59;
    private java.awt.Canvas canvas6;
    private java.awt.Canvas canvas60;
    private java.awt.Canvas canvas61;
    private java.awt.Canvas canvas62;
    private java.awt.Canvas canvas63;
    private java.awt.Canvas canvas64;
    private java.awt.Canvas canvas7;
    private java.awt.Canvas canvas8;
    private java.awt.Canvas canvas9;
    private javax.swing.JButton exitButton;
    private javax.swing.JSeparator jSeparatorLower;
    private javax.swing.JSeparator jSeparatorUpper;
    private javax.swing.JPanel row0;
    private javax.swing.JPanel row1;
    private javax.swing.JPanel row2;
    private javax.swing.JPanel row3;
    private javax.swing.JPanel row4;
    private javax.swing.JPanel row5;
    private javax.swing.JPanel row6;
    private javax.swing.JPanel row7;
    private javax.swing.JButton runButton;
    private javax.swing.JComboBox runTimeComboBox;
    private javax.swing.JLabel runTimeSelectionLabel;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
